= rdbacl

* FIX (url)

== DESCRIPTION:

Rdbacl is a Ruby interface to dbacl, a Bayesian text analysis tool.  Dbacl is a very Unixy program, it is driven by the command line and uses local files and stdin and stdout a lot.  I was first interested in writing an FFI library to bring these functions all native into Ruby, but then I noticed how much of the software is hardcoded to work the way it does, so I decided to start with just some Ruby scripts that encompass the command-line arguments.

== FEATURES/PROBLEMS:

* Wraps a dbacl command with a decent Ruby syntax
* Sets up multiple classifications per application very easily

TODO: 

* Finish the wrapped_dbacl classes
* Finish the wrapper class (a few config options are left, #2, and some more validation)
* Rack Middleware
* Runner reset, learn, classify
* Repository mixins

== SYNOPSIS:

  FIX (code sample of usage)
  For an ActiveRecord model:
  ...
  
  As Rack Middleware:
  ...

== REQUIREMENTS:

* dbacl (sudo port install dbacl or sudo apt_get install dbacl should work)

== INSTALL:

* sudo gem install davidrichards-rdbacl

== LICENSE:

(The MIT License)

Copyright (c) 2009 David Richards

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
